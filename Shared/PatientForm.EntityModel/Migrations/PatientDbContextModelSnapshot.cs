// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PatientForm.EntityModel;

#nullable disable

namespace PatientForm.EntityModel.Migrations
{
    [DbContext(typeof(PatientDbContext))]
    partial class PatientDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PatientForm.EntityModel.Allergie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Allergie");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Drugs - Penicillin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Drugs - Others"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Animals"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Food"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Oinments"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Plant"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Sprays"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Others"
                        },
                        new
                        {
                            Id = 9,
                            Name = "No Allergies"
                        });
                });

            modelBuilder.Entity("PatientForm.EntityModel.AllergiesDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AllergiesID")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int?>("PatientInfoPatientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PatientInfoPatientId");

                    b.ToTable("AllergiesDetail");
                });

            modelBuilder.Entity("PatientForm.EntityModel.Disease", b =>
                {
                    b.Property<int>("DiseaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiseaseId"));

                    b.Property<string>("DiseaseName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DiseaseId");

                    b.ToTable("Disease");

                    b.HasData(
                        new
                        {
                            DiseaseId = 1,
                            DiseaseName = "Fever"
                        },
                        new
                        {
                            DiseaseId = 2,
                            DiseaseName = "Brain"
                        },
                        new
                        {
                            DiseaseId = 3,
                            DiseaseName = "Heart"
                        },
                        new
                        {
                            DiseaseId = 4,
                            DiseaseName = "Kidney"
                        });
                });

            modelBuilder.Entity("PatientForm.EntityModel.Ncd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ncd");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Asthma"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cancer"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Disorders of ear"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Disorder of eye"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Mental illness"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Oral health problems"
                        });
                });

            modelBuilder.Entity("PatientForm.EntityModel.NcdDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("NcdId")
                        .HasColumnType("int");

                    b.Property<int>("PatientId")
                        .HasColumnType("int");

                    b.Property<int?>("PatientInfoPatientId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PatientInfoPatientId");

                    b.ToTable("NcdDetail");
                });

            modelBuilder.Entity("PatientForm.EntityModel.PatientInfo", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientId"));

                    b.Property<int>("DiseaseId")
                        .HasColumnType("int");

                    b.Property<int>("Epilepsy")
                        .HasColumnType("int");

                    b.Property<string>("PatientName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientId");

                    b.ToTable("PatientInfo");
                });

            modelBuilder.Entity("PatientForm.EntityModel.AllergiesDetail", b =>
                {
                    b.HasOne("PatientForm.EntityModel.PatientInfo", null)
                        .WithMany("AllergiesDetails")
                        .HasForeignKey("PatientInfoPatientId");
                });

            modelBuilder.Entity("PatientForm.EntityModel.NcdDetail", b =>
                {
                    b.HasOne("PatientForm.EntityModel.PatientInfo", null)
                        .WithMany("NcdDetails")
                        .HasForeignKey("PatientInfoPatientId");
                });

            modelBuilder.Entity("PatientForm.EntityModel.PatientInfo", b =>
                {
                    b.Navigation("AllergiesDetails");

                    b.Navigation("NcdDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
